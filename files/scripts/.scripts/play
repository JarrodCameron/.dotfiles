#!/usr/bin/env bash

# Author: Jarrod Cameron (z5210220)
# Date:   24/11/19 22:35

function handle_cpp () {
    filename="$1"
    temp="$(mktemp)"
    g++ "$filename" -o "$temp"
    [ -x "$temp" ] && "$temp"
    rm -f "$temp"
}

function handle_c () {
    filename="$1"
    temp="$(mktemp)"
    gcc "$filename" -o "$temp"
    [ -x "$temp" ] && "$temp"
    rm -f "$temp"
}

function handle_java () {
    filename="$1"
    javac "$filename"

    classname="$(printf "%s" "$filename" | sed 's/\.java$//g')"
    java "$classname"
}

function handle_asm () {
	src="$1"

	# Trim extension
	name="${src%.*}"

	tmp="$(mktemp)"

	if [ -n "$(grep '^\[BITS\s\s*32]\s*$' "$src")" ]; then
		nasm -f elf "$src" -o "$tmp"
		ld -m elf_i386 "$tmp" -o "$name"
	else
		echo 'Todo compile for 64bit'
		# 64bit TODO
	fi

	rm -f "$tmp"
}

function usage () {
    printf "Usage: play <file>\n"
}

if [ "$#" = "0" ]; then
    usage
    exit 0
fi

while [ "$1" ]; do

    filename="$1"

    case "$filename"
    in
        *.cpp)          handle_cpp "$filename" ;;
        *.c)            handle_c "$filename" ;;
        *.java)         handle_java "$filename" ;;
		*.asm)          handle_asm "$filename" ;;
        *)              printf "\`play' can't handle ${filename}"
                        exit 1
    esac
    shift
done

exit 0



