#!/usr/bin/env bash

# Author: Jarrod Cameron (z5210220)
# Date:   16/11/19 20:18

# Simple script used execute a temporary bash script if saved:
# 1. Store all input from stdin into $TEMP
# 2. Use vim to open $TEMP
# 3. If vim updates the $TEMP file the file is run with `bash $TEMP'

# The program to run the file with
interpreter='bash'

# The file type for vim syntax highlighting
file_type='sh'

# TODO Replace with sed command
print_temp () {
    local temp_file="$1"
    printf '### Generated by tim ###\n'
    IFS=''
    while read line
    do
        printf '#%s\n' "$line"
    done < "$temp_file"
}

# Print usage
usage () {
# TODO
    true
}

while [ "$1" ]
do
    arg="$1"
    shift

    case "$arg" in
		'p') interpreter='python3'
		     file_type='python' ;;
        'p2') echo python2 ;; # TODO
        'h') usage && exit 0 ;; # TODO
        'q') echo quiet ;; # TODO
        *) usage 1>&2 && exit 1 ;; # TODO
    esac
done

TEMP="$(mktemp)"

IFS=''
while read line
do
    printf "%s\n" "$line"
done > "$TEMP"

start_modify="$(stat "${TEMP}" --format='%Y')"

vim -c 'set filetype='"$file_type" "$TEMP" 0</dev/tty 1>/dev/tty 2>/dev/tty

end_modify="$(stat "${TEMP}" --format='%Y')"

if [ "$end_modify" != "$start_modify" ]; then
    print_temp "$TEMP"
    "$interpreter" "$TEMP"
fi

rm -f "$TEMP"
