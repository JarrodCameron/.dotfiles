#!/bin/sh

# Author: Jarrod Cameron (z5210220)
# Date:   09/02/21 13:19

# This script is pretty much a "searchsploit" wrapper. After searching for
# something, the user selectes the desired payload to be copied to the current
# working directory. NOTE: this script only shows exploits, NOT shellcodes.

# Exit on non-zero return status
set -e

search_db ()
{
	searchsploit --json "$1" \
		| jq --raw-output '.RESULTS_EXPLOIT[] | .["Title"] + " [" + .["EDB-ID"] + "]"'
}

display_search ()
{
	line="$1"
	file="$2"
	edbid="$(echo "$line" | awk '{print $NF}' | sed 's/^\[//g ; s/]$//')"

	# Print the metadata from `searchsploitdb`
	jq \
		--color-output \
		'.RESULTS_EXPLOIT[] | select(.["EDB-ID"] == "'"$edbid"'")' \
		"$file"

	src="$(jq \
		--raw-output \
		'.RESULTS_EXPLOIT[] | select(.["EDB-ID"] == "'"$edbid"'") | .["Path"]' \
		"$file")"

	# print the contents of the file
	bat --color=always "$src"

}

term="$1"

if [ -z "$term" ]; then
	echo 'ERROR: No search term!'
	echo 'Usage:' "$0" '<term>'
	exit 1
fi

if [ "$1" = '--preview' ] && [ "$#" = '3' ]; then
	display_search "$2" "$3"
	echo 'searching'
	exit 0
fi

tmp="$(mktemp)"
searchsploit --json "$term" > "$tmp"

count="$(jq '.RESULTS_EXPLOIT | length' "$tmp")"
if [ "$count" = '0' ]; then
	echo 'ERROR: No results for "'"$term"'"'
	rm -f "$tmp"
	exit 1
fi

line="$(search_db "$term" | fzf --preview="$0"' --preview {} '"$tmp")"

if [ -z "$line" ]; then
	echo 'ERROR: No entry was selected'
	exit 1
fi

edbid="$(echo $line | awk '{print $NF}' | sed 's/^\[//g ; s/]$//')"
src="$(jq \
	--raw-output \
	'.RESULTS_EXPLOIT[] | select(.["EDB-ID"] == "'"$edbid"'") | .["Path"]' \
	"$tmp")"

echo "$src" '-> .'
cp "$src" .

rm -f "$tmp"

