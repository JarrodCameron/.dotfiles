#!/usr/bin/env bash

# Author: Jarrod Cameron (z5210220)

# Recall: `exit 1` will prevent the module from being displayed

# Pick color depending on signal strength
# Colors are picked from:
#   https://mycolor.space/gradient3
# Selected colors:
# - 00FF00 (Green)
# - FFFF00 (Yellow)
# - FF0000 (Red)
get_color () {

  # Easier to compare integer values
  if [ $quality -le "8" ]; then
    retval="ff0000"
  elif [ $quality -le "16" ]; then
    retval="ff5b00"
  elif [ $quality -le "25" ]; then
    retval="ff8700"
  elif [ $quality -le "33" ]; then
    retval="ffad00"
  elif [ $quality -le "41" ]; then
    retval="ffd000"
  elif [ $quality -le "50" ]; then
    retval="f6e000"
  elif [ $quality -le "58" ]; then
    retval="eaef00"
  elif [ $quality -le "66" ]; then
    retval="dbff00"
  elif [ $quality -le "75" ]; then
    retval="bdff00"
  elif [ $quality -le "83" ]; then
    retval="9aff00"
  elif [ $quality -le "91" ]; then
    retval="6dff00"
  else
    retval="00ff00"
  fi

  # Return the color
  echo $retval

}

# Check number of interfaces (not including loopback interface)
# Exit if no other interface detected
[ "$(ls /sys/class/net | grep -v "lo" | wc -l)" = "0" ] && exit 1

interface="$(ip route | awk '/^default/ {print $5}')"

# Exit if networking is disabled
[ -z $interface ] || [ "$(nmcli networking)" = "disabled" ] && exit 1

# Exit if interface is closed
[ "$(cat /sys/class/net/"$interface"/operstate)" = "down" ] && exit 1

# IPv4 address with domain mask
ipv4="$(ip addr show $interface | awk '/^\s*inet / {print $2}')"

# Signal quality
# For more information see (4.1 /proc/net/wireless):
# https://hewlettpackard.github.io/wireless-tools/Linux.Wireless.Extensions.html
quality=$(cat /proc/net/wireless | grep "^""$interface" | awk '{print $4}' | sed 's/[-.]//g')

# The network name (I need a course in regex)
SSID="$(iwconfig $interface | grep "ESSID" | sed 's/.*ESSID:"//g; s/".*//g')"

echo "$SSID"": ""$ipv4"" (""$quality""%)"
echo "$SSID"": ""$ipv4"" (""$quality""%)"
echo \#$(get_color)


