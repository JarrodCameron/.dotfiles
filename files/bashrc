#    _               _
#   | |             | |
#   | |__   __ _ ___| |__  _ __ ___
#   | '_ \ / _` / __| '_ \| '__/ __|
#  _| |_) | (_| \__ \ | | | | | (__
# (_)_.__/ \__,_|___/_| |_|_|  \___|

# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# Bash formatting constants
BOLD="\e[1m"
ULINE="\e[4m"
RESET="\e[0m"

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=20000
HISTFILESIZE=20000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

##########
# CUSTOM #
##########

#[ ! -z "$(ps -x | grep "urxvt" | grep -v "grep")" ] || neofetch

# Bash with vim keys
set -o vi

## `export' sets global variables
export PATH="$PATH"":""$HOME""/.scripts/"
export EDITOR="$(which vim)"
export TERMINAL="$(which urxvt)"

# Copy
alias copy="xclip -selection clip 2> /dev/null"

alias compton="compton --config ~/.config/compton/config"

alias cse="ssh -i ~/.ssh/cse z5210220@cse.unsw.edu.au"
alias objdump="objdump -Mintel"
alias r2="radare2"
alias p="python3 -q"
alias gdb="gdb -q"
alias v="vim"
alias bim="vim"
alias gim="vim"
alias LS="ls"
alias sl="ls"
alias s="ls"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."

# Open up a tar file
alias untar="tar -xvf"

# Disable terminal beeps
stty -ixon

echo -e "$BOLD""To do list:""$RESET"
echo -e "1) wargames (3/23)"
echo -e "2) Leetcode (71/100)"
echo -e "3) gruvbox + airline"
echo -e "4) entr to restart compton"
echo -e "5) QR scanner with pipe"
echo -e "6) i3-gaps resize mode"
echo -e "7) editconfig script won't stay open"
echo -e ""
echo -e "$BOLD""COMP3121 Lectures:    COMP3411 Lectures:""$RESET"
echo -e "07) Ep. 18 0:45       Lec 3: Wumpus World (21:23)"
echo -e "08) Ep. 17 1:43       Lec 4: Chess vs Robocup (19:45)"
echo -e "09) Ep. 16 0:40       Lec 5: Classifying Environments (19:20)"
echo -e "10) Ep. 15 1:49       Lec 6: Agent Types (26:03)"
echo -e "11) Ep. 14 0:50       Lec 7: Path Search (19:23)"
echo -e "12) Ep. 12 0:43       Lec 8: Uninformed Path Search Algorithms (28:03)"
echo -e "13) Ep. 13 0:57       Lec 9: Heuristic Path Search Algorithms (22:30)"
echo -e "14) Ep. 11 0:38       Lec 10: Finding Admissible Heuristics (22:33)"
echo -e "15) Ep. 10 1:50       Lec 11: Computers Playing Games (15:09)"
echo -e "16) Ep. 9  0:48       Lec 12: Minimax and Alpha Beta (29:14)"
echo -e "17) Ep. 8  1:36       Lec 13: Games in Detail (31:23)"
echo -e "18) Ep. 7  0:52"      
echo -e "19) Ep. 6  1:29       "$BOLD"""COMP3841 Lectures:""$RESET"
echo -e "20) Ep. 5  0:48       [01] [02] [03] [04]"
echo -e "21) Ep. 4  1:45       [05] [06] [07] [08]"
echo -e "22) Ep. 3  0:36       [09] [10] [11]"
echo -e "23) Ep. 2  0:49"
echo -e "24) Ep. 1  1:59"
